name: GitHub-Profile-3D-Contrib
on:
  schedule:
    - cron: "3 18 * * *"  # Runs daily at 18:03 UTC
  workflow_dispatch:  # Manual trigger
  push:
    branches: [ main ]
    paths-ignore:
      - 'profile-3d-contrib/**'

jobs:
  build:
    runs-on: ubuntu-latest
    name: generate-github-profile-3d-contrib
    
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    
    permissions:
      contents: write
      issues: write  # Add this for issue creation
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Generate 3D Contribution Graph
        id: generate-3d
        uses: yoshi389111/github-profile-3d-contrib@0.7.1
        timeout-minutes: 10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          USERNAME: ${{ github.repository_owner }}
          MAX_REPOS: 100
          SETTING_JSON: prof-3d-config.json
      
      - name: Verify Generated Files
        if: steps.generate-3d.outcome == 'success'
        run: |
          if [ ! -d "profile-3d-contrib" ]; then
            echo "::error::Generated directory not found!"
            exit 1
          fi
      
      - name: Configure Git
        if: steps.generate-3d.outcome == 'success'
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          
      - name: Commit & Push
        if: steps.generate-3d.outcome == 'success'
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            git add -A .
            git commit -m "chore: update 3d contrib graph [skip ci]" || exit 0
            for i in {1..3}; do
              if git push; then
                echo "Successfully pushed changes"
                break
              fi
              if [ $i -eq 3 ]; then
                echo "::warning::Failed to push after 3 attempts"
                exit 0  # Don't fail the workflow for push issues
              fi
              echo "Push failed, retrying..."
              git pull --rebase
              sleep 5
            done
          else
            echo "No changes to commit"
          fi

      - name: Create Failure Issue
        if: failure() && github.event_name != 'pull_request'
        uses: actions/github-script@v6
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            try {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: '3D Contribution Graph Generation Failed',
                body: `Workflow run failed: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}\n\nError details:\n\`\`\`\n${{ toJSON(steps.generate-3d.outputs) }}\n\`\`\``
              });
            } catch (error) {
              console.error('Failed to create issue:', error.message);
              // Use workflow commands to still show the error
              core.warning('Failed to create issue: ' + error.message);
            }

  cleanup:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            try {
              const { data: runs } = await github.rest.actions.listWorkflowRuns({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: context.workflow,
                per_page: 100
              });
              
              const oldRuns = runs.workflow_runs
                .filter(run => run.status === 'completed')
                .slice(30);
                
              for (const run of oldRuns) {
                await github.rest.actions.deleteWorkflowRun({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  run_id: run.id
                });
              }
            } catch (error) {
              core.warning('Cleanup failed: ' + error.message);
            }
